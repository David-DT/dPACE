//Inputs:
    //  message (RingMessage) - to be signed by the ring signature
    //  data (uint256[2*N+2]) - required data to form the signature where N is the number of Public Keys (ring size)
    //      data[0] - index from 0 to (N-1) specifying which Public Key has a known private key
    //      data[1] - corresponding private key for PublicKey[k]
    //      data[2   ... 2+(N-1)] - Random Numbers - total of N random numbers
    //      data[2+N ... 2*N+1  ] - Public Keys (compressed) - total of N Public Keys
    //      e.g. N=3; data = {k, PrivateKey_k, random0, random1, random2, PubKey0, PubKey1, PubKey2 }

    data[0] = 0
    data[1] =
    data[2 .. 2+ N]
    data = [0,24523306904522228002971813413757072136659023573253578994238606504297273343271,7219257352706480247967137715330479737844007275008583933911462861442855887169,6144326898455855039963942743644885308669945496742037560987191555021348673148,15175750002184819891866474716949840613456677348453981561530573830227456774365,367756774061134533160734495865791553069822875364035978743459021106102168832585,17690583678076859362376062119839034816533000513520260548048587142086075503430,14973139585634177707619005706845580938870238416620217066722950068247850298311] 